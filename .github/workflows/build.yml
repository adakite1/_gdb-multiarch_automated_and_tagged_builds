name: Build GDB

on:
  push:
    tags:
      - '*'
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build GDB for ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - { name: "Linux/Windows", os: "ubuntu-22.04", path: "linux" }
          - { name: "macOS (amd64)", os: "macos-13", path: "macos-amd64" }
          - { name: "macOS (aarch64)", os: "macos-latest", path: "macos-aarch64" }

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        fetch-tags: true

    - name: Build GDB
      working-directory: ${{ matrix.config.path }}
      run: ./build.sh

    - name: Upload Linux Build
      if: matrix.config.name == 'Linux/Windows'
      uses: actions/upload-artifact@v4
      with:
        name: gdb-linux
        path: ${{ matrix.config.path }}/gdb-*-linux.zip

    - name: Upload Windows Build  
      if: matrix.config.name == 'Linux/Windows'
      uses: actions/upload-artifact@v4
      with:
        name: gdb-windows
        path: ${{ matrix.config.path }}/gdb-*-mingw64.zip

    - name: Upload macOS Build (amd64)
      if: matrix.config.name == 'macOS (amd64)'
      uses: actions/upload-artifact@v4
      with:
        name: gdb-macos-amd64
        path: ${{ matrix.config.path }}/gdb-*-macos-amd64.zip
    
    - name: Upload macOS Build (aarch64)
      if: matrix.config.name == 'macOS (aarch64)'
      uses: actions/upload-artifact@v4
      with:
        name: gdb-macos-aarch64
        path: ${{ matrix.config.path }}/gdb-*-macos-aarch64.zip

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        name: ${{ github.ref_name }}
        files: |
          ${{ matrix.config.path }}/gdb-*.zip
  
  create-universal-binary:
    name: Create macOS Universal Binary
    needs: build  # This ensures the job runs after the build job completes
    runs-on: macos-latest
    if: success()
    steps:
      - name: Download amd64 artifact
        uses: actions/download-artifact@v4
        with:
          name: gdb-macos-amd64
      
      - name: Download aarch64 artifact
        uses: actions/download-artifact@v4
        with:
          name: gdb-macos-aarch64
      
      - name: Create Universal Binary
        run: |
          ls
        
          # Extract both zip files
          unzip gdb-*-macos-amd64.zip
          mv gdb gdb-amd64
          unzip -o gdb-*-macos-aarch64.zip
          mv gdb gdb-aarch64
          
          # Create universal binary
          lipo -create \
            gdb-amd64 \
            gdb-aarch64 \
            -output gdb

          # Create new zip with universal binary
          VERSION=$(ls gdb-*-macos-amd64.zip | sed 's/.*gdb-\(.*\)-macos.*/\1/')
          zip -r gdb-${VERSION}-macos-universal.zip gdb README.txt licenses/
      
      - name: Upload Universal Binary
        uses: actions/upload-artifact@v4
        with:
          name: gdb-macos-universal
          path: gdb-*-macos-universal.zip

      - name: Add to Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.ref_name }}
          files: gdb-*-macos-universal.zip
